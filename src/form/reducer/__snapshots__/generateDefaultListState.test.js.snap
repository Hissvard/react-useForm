// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`complex list 1`] = `
Immutable.Map {
  "initial": Immutable.Map {
    "type": "list",
    "optional": false,
    "label": "List",
    "field": Object {
      "fields": Array [
        Object {
          "label": "First",
          "name": "first",
        },
        Object {
          "label": "Second",
          "name": "second",
        },
      ],
      "label": "List",
      "name": "fieldName",
      "type": "list",
    },
    "options": Object {},
  },
  "current": Immutable.Map {
    "helperText": "",
    "error": false,
    "pristine": true,
    "touched": false,
  },
  "items": Immutable.List [],
}
`;

exports[`complex list with initialValues 1`] = `
Immutable.Map {
  "initial": Immutable.Map {
    "type": "list",
    "optional": false,
    "label": "List",
    "field": Object {
      "fields": Array [
        Object {
          "label": "First",
          "name": "first",
        },
        Object {
          "label": "Second",
          "name": "second",
        },
      ],
      "label": "List",
      "name": "fieldName",
      "type": "list",
    },
    "options": Object {},
  },
  "current": Immutable.Map {
    "helperText": "",
    "error": false,
    "pristine": true,
    "touched": false,
  },
  "items": Immutable.List [
    Immutable.Map {
      "fields": Immutable.Map {
        "first": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "First",
            "field": Object {
              "label": "First",
              "name": "fieldName.items.0.fields.first",
            },
            "value": "1",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "1",
          },
        },
        "second": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "Second",
            "field": Object {
              "label": "Second",
              "name": "fieldName.items.0.fields.second",
            },
            "value": "2",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "2",
          },
        },
      },
    },
    Immutable.Map {
      "fields": Immutable.Map {
        "first": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "First",
            "field": Object {
              "label": "First",
              "name": "fieldName.items.1.fields.first",
            },
            "value": "10",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "10",
          },
        },
        "second": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "Second",
            "field": Object {
              "label": "Second",
              "name": "fieldName.items.1.fields.second",
            },
            "value": "20",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "20",
          },
        },
      },
    },
  ],
}
`;

exports[`complex nested list with initialValues 1`] = `
Immutable.Map {
  "initial": Immutable.Map {
    "type": "list",
    "optional": false,
    "label": "List",
    "field": Object {
      "fields": Array [
        Object {
          "label": "First",
          "name": "first",
        },
        Object {
          "fields": Array [
            Object {
              "label": "nestedList",
              "name": "nestedName",
            },
          ],
          "label": "Second",
          "name": "second",
          "type": "list",
        },
      ],
      "label": "List",
      "name": "fieldName",
      "type": "list",
    },
    "options": Object {},
  },
  "current": Immutable.Map {
    "helperText": "",
    "error": false,
    "pristine": true,
    "touched": false,
  },
  "items": Immutable.List [
    Immutable.Map {
      "fields": Immutable.Map {
        "first": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "First",
            "field": Object {
              "label": "First",
              "name": "fieldName.items.0.fields.first",
            },
            "value": "1",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "1",
          },
        },
        "second": Immutable.Map {
          "initial": Immutable.Map {
            "type": "list",
            "optional": false,
            "label": "Second",
            "field": Object {
              "fields": Array [
                Object {
                  "label": "nestedList",
                  "name": "nestedName",
                },
              ],
              "label": "Second",
              "name": "fieldName.items.0.fields.second",
              "type": "list",
            },
            "options": Object {},
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
          },
          "items": Immutable.List [
            Immutable.Map {
              "fields": Immutable.Map {
                "nestedName": Immutable.Map {
                  "initial": Immutable.Map {
                    "type": "text",
                    "optional": false,
                    "label": "nestedList",
                    "field": Object {
                      "label": "nestedList",
                      "name": "fieldName.items.0.fields.second.items.0.fields.nestedName",
                    },
                    "value": "nested name 1",
                  },
                  "current": Immutable.Map {
                    "helperText": "",
                    "error": false,
                    "pristine": true,
                    "touched": false,
                    "value": "nested name 1",
                  },
                },
              },
            },
          ],
        },
      },
    },
    Immutable.Map {
      "fields": Immutable.Map {
        "first": Immutable.Map {
          "initial": Immutable.Map {
            "type": "text",
            "optional": false,
            "label": "First",
            "field": Object {
              "label": "First",
              "name": "fieldName.items.1.fields.first",
            },
            "value": "10",
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
            "value": "10",
          },
        },
        "second": Immutable.Map {
          "initial": Immutable.Map {
            "type": "list",
            "optional": false,
            "label": "Second",
            "field": Object {
              "fields": Array [
                Object {
                  "label": "nestedList",
                  "name": "nestedName",
                },
              ],
              "label": "Second",
              "name": "fieldName.items.1.fields.second",
              "type": "list",
            },
            "options": Object {},
          },
          "current": Immutable.Map {
            "helperText": "",
            "error": false,
            "pristine": true,
            "touched": false,
          },
          "items": Immutable.List [
            Immutable.Map {
              "fields": Immutable.Map {
                "nestedName": Immutable.Map {
                  "initial": Immutable.Map {
                    "type": "text",
                    "optional": false,
                    "label": "nestedList",
                    "field": Object {
                      "label": "nestedList",
                      "name": "fieldName.items.1.fields.second.items.0.fields.nestedName",
                    },
                    "value": "nested name 10.A",
                  },
                  "current": Immutable.Map {
                    "helperText": "",
                    "error": false,
                    "pristine": true,
                    "touched": false,
                    "value": "nested name 10.A",
                  },
                },
              },
            },
            Immutable.Map {
              "fields": Immutable.Map {
                "nestedName": Immutable.Map {
                  "initial": Immutable.Map {
                    "type": "text",
                    "optional": false,
                    "label": "nestedList",
                    "field": Object {
                      "label": "nestedList",
                      "name": "fieldName.items.1.fields.second.items.1.fields.nestedName",
                    },
                    "value": "nested name 10.B",
                  },
                  "current": Immutable.Map {
                    "helperText": "",
                    "error": false,
                    "pristine": true,
                    "touched": false,
                    "value": "nested name 10.B",
                  },
                },
              },
            },
          ],
        },
      },
    },
  ],
}
`;

exports[`simple list 1`] = `
Immutable.Map {
  "initial": Immutable.Map {
    "type": "list",
    "optional": false,
    "label": "List",
    "field": Object {
      "label": "List",
      "name": "fieldName",
      "type": "list",
    },
    "options": Object {},
  },
  "current": Immutable.Map {
    "helperText": "",
    "error": false,
    "pristine": true,
    "touched": false,
  },
  "items": Immutable.List [],
}
`;
